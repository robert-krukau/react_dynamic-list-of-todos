{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","search","filterBy","getfilteredTodos","todos","props","filter","completed","title","toLowerCase","includes","result","this","className","type","placeholder","value","onChange","event","setState","target","map","todo","classNames","htmlFor","readOnly","checked","selectedUserId","userId","onClick","selectUser","id","React","Component","getData","url","fetch","then","response","json","getUsers","CurrentUser","user","prevProps","name","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62388b26.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[];\n  selectUser: (id: number) => void;\n  selectedUserId: number;\n};\n\ntype State = {\n  search: string;\n  filterBy: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    search: '',\n    filterBy: 'all',\n  };\n\n  getfilteredTodos = () => {\n    const { todos } = this.props;\n    const { filterBy, search } = this.state;\n\n    const filterByStatus = todos.filter(({ completed }) => {\n      switch (filterBy) {\n        case 'active':\n          return !completed;\n        case 'completed':\n          return completed;\n        default:\n          return true;\n      }\n    });\n\n    const filtered = filterByStatus.filter(({ title }) => {\n      return title.toLowerCase().includes(search.toLowerCase());\n    });\n\n    return filtered;\n  };\n\n  render() {\n    const result = this.getfilteredTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div>\n          <span>\n            Search:\n          </span>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              value={this.state.search}\n              onChange={event => this.setState({ search: event.target.value })}\n            />\n\n            <select onChange={event => this.setState({ filterBy: event.target.value })}>\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {result.map(todo => (\n              <li\n                key={todo.id}\n                className={\n                  classNames('TodoList__item', {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  })\n                }\n              >\n                <label htmlFor=\"forSmthng\">\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={\n                    classNames('TodoList__user-button',\n                      'button', {\n                        'TodoList__user-button--selected':\n                          this.props.selectedUserId === todo.userId,\n                      })\n                  }\n                  type=\"button\"\n                  onClick={() => this.props.selectUser(todo.userId)}\n                >\n                  User\n                  {' '}\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate.academy/students-api';\n\nconst getData = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport const getTodos = (): Promise<Todo[]> => getData('/todos');\nexport const getUsers = (userId: number): Promise<User> => getData(`/users/${userId}`);\n","import React from 'react';\nimport { getUsers } from '../../api/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  selectedUserId: number;\n  selectUser: (id: number) => void;\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    getUsers(this.props.selectedUserId)\n      .then(user => {\n        this.setState({ user });\n      });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      getUsers(this.props.selectedUserId)\n        .then(user => {\n          this.setState({ user });\n        });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        {user && (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user.id}`}</span></h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              className=\"CurrentUser__clear\"\n              onClick={() => this.props.selectUser(0)}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todo => {\n        this.setState({\n          todos: todo,\n        });\n      });\n  }\n\n  selectUser = (id: number) => {\n    if (id !== this.state.selectedUserId) {\n      this.setState({\n        selectedUserId: id,\n      });\n    }\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={this.state.todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                selectUser={this.selectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}